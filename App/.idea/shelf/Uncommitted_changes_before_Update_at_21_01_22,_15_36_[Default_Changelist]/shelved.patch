Index: app/src/main/java/com/unibg/magellanus/app/itinerary/view/MapFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.unibg.magellanus.app.itinerary.view\n\nimport android.Manifest\nimport android.content.pm.PackageManager\nimport android.os.Bundle\nimport android.view.KeyEvent\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.view.inputmethod.EditorInfo\nimport android.widget.SearchView\nimport androidx.core.app.ActivityCompat\nimport androidx.core.content.ContextCompat\nimport androidx.fragment.app.Fragment\nimport androidx.fragment.app.viewModels\nimport androidx.navigation.NavController\nimport androidx.navigation.fragment.findNavController\nimport androidx.preference.PreferenceManager\nimport com.google.android.material.snackbar.Snackbar\nimport com.unibg.magellanus.app.BuildConfig\nimport com.unibg.magellanus.app.R\nimport com.unibg.magellanus.app.databinding.FragmentMapBinding\nimport com.unibg.magellanus.app.itinerary.viewmodel.MapViewModel\nimport com.unibg.magellanus.app.user.auth.impl.FirebaseAuthenticationProvider\nimport org.osmdroid.api.IMapController\nimport org.osmdroid.config.Configuration\nimport org.osmdroid.tileprovider.tilesource.TileSourceFactory\nimport org.osmdroid.util.GeoPoint\nimport org.osmdroid.views.MapView\nimport org.osmdroid.views.overlay.compass.CompassOverlay\nimport org.osmdroid.views.overlay.compass.InternalCompassOrientationProvider\nimport org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider\nimport org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay\nimport org.osmdroid.views.overlay.Marker\n\nclass MapFragment : Fragment(){\n\n    private val provider = FirebaseAuthenticationProvider\n\n    private val viewModel by viewModels<MapViewModel>()\n\n    private lateinit var navController: NavController\n    private lateinit var binding: FragmentMapBinding\n    private lateinit var myLocationOverlay: MyLocationNewOverlay\n\n    private lateinit var map: MapView\n    private lateinit var mapController: IMapController\n\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?,savedInstanceState: Bundle?): View {\n        binding = FragmentMapBinding.inflate(inflater, container, false)\n        binding.bntCentra.setOnClickListener{btnCentra()}\n        binding.btnPOI.setOnClickListener{btnPOI()}\n        binding.btnItinerari.setOnEditorActionListener{ _,keyCode, event ->\n            if (((event?.action ?: -1 ) == KeyEvent.ACTION_DOWN) || keyCode == EditorInfo.IME_ACTION_SEARCH){\n                searchQuery()\n                return@setOnEditorActionListener true\n            }\n            return@setOnEditorActionListener false\n        }\n        binding.searchBar.setOnSearchClickListener{searchText()}\n\n        return binding.root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        setHasOptionsMenu(true)\n        navController = findNavController()\n\n        val ctx = requireActivity().applicationContext\n        Configuration.getInstance().load(ctx, PreferenceManager.getDefaultSharedPreferences(ctx))\n        Configuration.getInstance().userAgentValue = BuildConfig.APPLICATION_ID\n\n        map = binding.map\n        map.setTileSource(TileSourceFactory.MAPNIK)\n        map.setMultiTouchControls(true)\n        map.visibility = View.VISIBLE\n\n        println(provider.currentUser)\n\n        if (provider.currentUser == null)\n            navController.navigate(MapFragmentDirections.actionMapFragmentToLoginFragment())\n        else {\n\n            //Permissions check\n            if (ContextCompat.checkSelfPermission(\n                    this.requireContext(),\n                    Manifest.permission.ACCESS_FINE_LOCATION\n                ) == PackageManager.PERMISSION_DENIED\n            ) {\n                if (ContextCompat.checkSelfPermission(\n                        this.requireContext(),\n                        Manifest.permission.ACCESS_COARSE_LOCATION\n                    ) == PackageManager.PERMISSION_DENIED\n                )\n                    ActivityCompat.requestPermissions(\n                        this.requireActivity(),\n                        arrayOf(\n                            Manifest.permission.ACCESS_FINE_LOCATION,\n                            Manifest.permission.ACCESS_COARSE_LOCATION\n                        ),\n                        1\n                    )\n                ActivityCompat.requestPermissions(\n                    this.requireActivity(),\n                    arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),\n                    1\n                )\n            }\n\n        //Controller usage, overlay declaration and location enabling\n            this.mapController = map.controller\n            myLocationOverlay = MyLocationNewOverlay(GpsMyLocationProvider(context), map)\n            myLocationOverlay.enableMyLocation()\n            myLocationOverlay.enableFollowLocation()\n            myLocationOverlay.isDrawAccuracyEnabled = true\n\n            this.mapController.setZoom(15)\n\n            map.overlays.add(myLocationOverlay)\n\n            var berlin = Marker(map)\n            berlin.position = GeoPoint(52.50693,13.39748)\n            berlin.title = \"Berlino\"\n            map.overlays.add(berlin)\n\n            map.invalidate()\n        }\n\n\n    }\n\n    override fun onResume() {\n        super.onResume()\n        //this will refresh the osmdroid configuration on resuming.\n        //if you make changes to the configuration, use\n        //SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);\n        //Configuration.getInstance().load(this, PreferenceManager.getDefaultSharedPreferences(this));\n        map.onResume() //needed for compass, my location overlays, v6.0.0 and up\n    }\n\n    override fun onPause() {\n        super.onPause()\n        //this will refresh the osmdroid configuration on resuming.\n        //if you make changes to the configuration, use\n        //SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(this);\n        //Configuration.getInstance().save(this, prefs);\n        map.onPause() //needed for compass, my location overlays, v6.0.0 and up\n    }\n\n    fun btnCentra(){\n        this.mapController.animateTo(myLocationOverlay.myLocation)\n        myLocationOverlay.enableMyLocation()\n        myLocationOverlay.enableFollowLocation()\n        myLocationOverlay.isDrawAccuracyEnabled = true\n    }\n\n    fun btnPOI(){\n        myLocationOverlay.disableFollowLocation()\n        myLocationOverlay.disableMyLocation()\n        this.mapController.animateTo(GeoPoint(52.50693,13.39748))\n    }\n\n    fun btnItinerari(){\n\n    }\n\n    fun searchQuery(){\n        Snackbar.make(\n            requireActivity().findViewById(android.R.id.content),\n            \"SearchQuery\",\n            Snackbar.LENGTH_LONG\n        ).show()\n    }\n\n    fun searchText(){\n        Snackbar.make(\n            requireActivity().findViewById(android.R.id.content),\n            \"SearchText\",\n            Snackbar.LENGTH_LONG\n        ).show()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/unibg/magellanus/app/itinerary/view/MapFragment.kt b/app/src/main/java/com/unibg/magellanus/app/itinerary/view/MapFragment.kt
--- a/app/src/main/java/com/unibg/magellanus/app/itinerary/view/MapFragment.kt	(revision 20481d66d62b23ebd3f2b4e1e3e073a5d33d196e)
+++ b/app/src/main/java/com/unibg/magellanus/app/itinerary/view/MapFragment.kt	(date 1642613129032)
@@ -11,6 +11,7 @@
 import android.widget.SearchView
 import androidx.core.app.ActivityCompat
 import androidx.core.content.ContextCompat
+import androidx.databinding.adapters.SearchViewBindingAdapter
 import androidx.fragment.app.Fragment
 import androidx.fragment.app.viewModels
 import androidx.navigation.NavController
@@ -50,14 +51,9 @@
         binding = FragmentMapBinding.inflate(inflater, container, false)
         binding.bntCentra.setOnClickListener{btnCentra()}
         binding.btnPOI.setOnClickListener{btnPOI()}
-        binding.btnItinerari.setOnEditorActionListener{ _,keyCode, event ->
-            if (((event?.action ?: -1 ) == KeyEvent.ACTION_DOWN) || keyCode == EditorInfo.IME_ACTION_SEARCH){
-                searchQuery()
-                return@setOnEditorActionListener true
-            }
-            return@setOnEditorActionListener false
-        }
+        binding.btnItinerari.setOnClickListener{btnItinerari()}
         binding.searchBar.setOnSearchClickListener{searchText()}
+        binding.searchBar.setOnQueryTextListener{searchQuery()}
 
         return binding.root
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DesignSurface\">\n    <option name=\"filePathToZoomLevelMap\">\n      <map>\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/drawable/ic_menu_24dp.xml\" value=\"0.10989583333333333\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/activity_main.xml\" value=\"0.33\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/activity_main2.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/app_bar_main.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/content_main.xml\" value=\"0.16666666666666666\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/fragment_gallery.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/fragment_home.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/fragment_login.xml\" value=\"0.25\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/fragment_map.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/fragment_slideshow.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/fragment_user_profile.xml\" value=\"0.30409356725146197\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/header_navigation_drawer.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/header_user_profile.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/login_fragment.xml\" value=\"0.33\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/nav_header_main.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/settings_activity.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/layout/user_profile.xml\" value=\"0.1\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/menu/activity_main_drawer.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/menu/bottom_navigation_menu.xml\" value=\"0.22\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/menu/main.xml\" value=\"0.2\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/menu/navigation_drawer.xml\" value=\"0.25\" />\n        <entry key=\"..\\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/xml/root_preferences.xml\" value=\"0.25\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n  <component name=\"VisualizationToolProject\">\n    <option name=\"state\">\n      <ProjectState>\n        <option name=\"scale\" value=\"0.33\" />\n      </ProjectState>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 20481d66d62b23ebd3f2b4e1e3e073a5d33d196e)
+++ b/.idea/misc.xml	(date 1642178501231)
@@ -25,6 +25,8 @@
         <entry key="..\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/menu/main.xml" value="0.2" />
         <entry key="..\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/menu/navigation_drawer.xml" value="0.25" />
         <entry key="..\:/Users/feder/Documents/Magellanus_Codice/Magellanus/App/app/src/main/res/xml/root_preferences.xml" value="0.25" />
+        <entry key="app/src/main/res/layout/activity_main.xml" value="0.5715579710144928" />
+        <entry key="app/src/main/res/layout/fragment_map.xml" value="0.5715579710144928" />
       </map>
     </option>
   </component>
